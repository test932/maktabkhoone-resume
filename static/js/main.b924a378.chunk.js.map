{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesAndIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","sections/TopMenu.js","sections/TopButton.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","DownIcon","src","icon","TitlesAndIcons","changeColor","setState","color","state","bind","name","style","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","down","AboutSection","section","items","p","content","SkillCard","skill","image","SkillSection","eachSkill","TopMenu","iterator","document","body","theme","back","initTheme","class","onClick","menu","menu_item_change_color","menu_item_About","menu_item_Portfolio","TopButton","is_visible","scrollComponent","addEventListener","e","toggleVisibility","window","pageYOffset","App","position","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b924a378.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './Fullpage.css';\r\nimport App from \"../App\";\r\n\r\nclass Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props\r\n        return (\r\n        <div className={`fullpage ${this.props.className || ''}`}>\r\n            {children}\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Fullpage","import React, { Component } from \"react\";\r\n\r\nconst DownIcon = (props) => {\r\n  return (\r\n      <div className=\"down\">\r\n        <img src={props.icon} />\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from \"react-scroll\";\r\n\r\nclass TitlesAndIcons extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      color: \"white\",\r\n    };\r\n    this.changeColor = this.changeColor.bind(this);\r\n  }\r\n\r\n  changeColor = () => {\r\n    this.setState({\r\n      color: this.state.color === \"white\" ? \"yellow\" : \"white\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"title\" className=\"element\"></Element>\r\n        <Fullpage className=\"first\">\r\n          <h1\r\n            className=\"title\"\r\n            style={{ color: this.state.color }}\r\n            onMouseOver={this.changeColor}\r\n            onMouseLeave={() => this.changeColor()}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map((key) => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Link\r\n            className=\"to_hand\"\r\n            activeClass=\"active\"\r\n            to=\"about\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={50}\r\n            duration={500}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <div className=\"downBottom\">\r\n              <DownIcon icon={data.icon.down} />\r\n            </div>\r\n          </Link>\r\n        </Fullpage>\r\n        <Element name=\"about\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TitlesAndIcons;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./AboutSection.css\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from \"react-scroll\";\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\">\r\n          <div className=\"aboutTitle\">\r\n            <h3>{data.section[0].title}</h3>\r\n          </div>\r\n          <div className=\"paragraphs\">\r\n            {data.section[0].items.map((p) => {\r\n              return (\r\n                <div className=\"textContent\">\r\n                  <p>{p.content}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Link\r\n            className=\"to_hand\"\r\n            activeClass=\"active\"\r\n            to=\"skill\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={50}\r\n            duration={500}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <DownIcon icon={data.icon.down} />\r\n          </Link>\r\n        </Fullpage>\r\n        <Element name=\"skill\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport SkillCard from \"../components/SkillCard\";\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"third\">\r\n        <div className=\"column\">\r\n          <h3>{data.section[1].title}</h3>\r\n          <div className=\"card-wrapper\">\r\n            {data.section[1].items.map((eachSkill) => {\r\n              return <SkillCard skill={eachSkill} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"../sections/TitlesAndIcons.js\";\r\nimport {\r\n  Link,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scrollSpy,\r\n  scroller,\r\n} from \"react-scroll\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.iterator=data.initTheme;\r\n    document.body.style = data.theme[0].back;\r\n  }\r\n \r\n\r\n  changeColor = () => {\r\n\r\n    if(this.iterator < 4){\r\n      this.iterator++;\r\n    }else{\r\n      this.iterator = 0\r\n    }\r\n    document.body.style = data.theme[this.iterator].back;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav class=\"navTop\">\r\n        <div class=\"menu\">\r\n          <div\r\n            class=\"menu_item inline left_menu to_hand\"\r\n            onClick={this.changeColor}\r\n          >\r\n            {data.menu.menu_item_change_color}\r\n          </div>\r\n          <div class=\"menu_item inline to_hand\">\r\n            <Link\r\n              className=\"to_hand\"\r\n              activeClass=\"active\"\r\n              to=\"about\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              duration={500}\r\n              onSetActive={this.handleSetActive}\r\n            >\r\n              {data.menu.menu_item_About}\r\n            </Link>\r\n          </div>\r\n          <div class=\"menu_item inline to_hand\">\r\n            <Link\r\n              className=\"to_hand\"\r\n              activeClass=\"active\"\r\n              to=\"skill\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              duration={500}\r\n              onSetActive={this.handleSetActive}\r\n            >\r\n              {data.menu.menu_item_Portfolio}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default TopMenu;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./TitlesAndIcons.js\";\r\nimport { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from \"react-scroll\";\r\n\r\n\r\nclass TopButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        is_visible: false\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var scrollComponent = this;\r\n    document.addEventListener(\"scroll\", function(e) {\r\n      scrollComponent.toggleVisibility();\r\n    });\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (window.pageYOffset > 300) {\r\n      this.setState({\r\n        is_visible: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        is_visible: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { is_visible } = this.state;\r\n    return (\r\n      <nav class=\"navBotoom \">\r\n        <div class=\"menu\">\r\n          <div class=\"menu_item inline to_hand\">\r\n          <Link\r\n            className=\"to_hand\"\r\n            activeClass=\"active\"\r\n            to=\"title\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={50}\r\n            duration={500}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            {is_visible && <div>TOP</div>}\r\n          </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default TopButton;\r\n","import React from \"react\";\n\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport ReactDOM from \"react-dom\";\nimport Snowfall from \"react-snowfall\";\nimport \"./App.css\";\nimport TopMenu from \"./sections/TopMenu\";\nimport TopButton from \"./sections/TopButton\";\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n    <Snowfall style={{position: \"fixed\"}}/>\n    <TopMenu />\n    <TitlesAndIcons />\n    <AboutSection />\n    <SkillSection />\n    <TopButton />\n\n  </div>\n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}